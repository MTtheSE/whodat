#!/usr/bin/env bash

#set global var to non-flag state
domain=$1
verbose=0

#exit if no domain
if [ $# -eq 0 ]
  then
    echo "Domain not provided"
    exit 1
fi

#If an IP, switch to reverse DNS lookup, provide verbose whois and exit
if [[ ${domain} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
  then
    revdns=$(dig -x ${domain} +short)
    if [ ! -z ${revdns} ]
      then
      echo "The reverse DNS of this IP is" ${revdns} " with BGP information:"
    fi
    whois -h whois.cymru.com " -v ${domain}"
    exit 1
fi

#check flag for verbose mode
while getopts ":v:" opt; do
  case $opt in
    v)
      domain="$OPTARG" >&2
      verbose=1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

#construct data based on input domain
ip=$(dig ${domain} +short|tail -n1)
operator=$(whois ${ip} | grep --line-buffered OrgName: | awk '{print $2}')

#output based on verbose mode
if ((${verbose} == 0))
then
   echo "The IP of" ${domain} "is" ${ip} "operated by" ${operator}
elif ((${verbose} == 1))
then
   echo $domain " resolves to "${ip}" with BGP information:"
   whois -h whois.cymru.com " -v ${ip}"
else
   echo "Error, try again"
fi
